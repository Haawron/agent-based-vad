services:
  rankserver:
    image: alpine:latest
    ports:
      - '5000:5000'
    command:
      - sh
      - -c
      - |
        apk add --no-cache netcat-openbsd
        COUNTER=0
        while true; do
          echo -e "HTTP/1.1 200 OK\r\n\r\n$$COUNTER" | nc -l -p 5000 -q 1
          COUNTER=$(( COUNTER+1 ))
          if [ $$COUNTER -gt 8 ]; then
            break
          fi
        done

  rankclient:
    image: ubuntu:latest
    depends_on:
      - rankserver
    command:
      - sh
      - -c
      - |
        sed -i "s@archive.ubuntu.com@mirror.kakao.com@g" /etc/apt/sources.list
        apt-get update && apt-get install -y curl

        while true; do
          rank=$(curl -s http://rankserver:5000)
          if [ -z "$$rank" ]; then
            echo "Rank server is not ready yet"
            sleep 1
            continue
          else
            echo "Got rank: $$rank"
            break
          fi
        done
    deploy:
      replicas: 8


  torch_worker:
    image: torch
    depends_on:
      - rankserver
    volumes:
      - /projects3/home/hglee/prjs/agent-based-vad/:/code
      - $HOME/.cache:/home/hglee/.cache
      - /projects3/datasets/UCF_Crimes/:/datasets/UCF_Crimes/
    command: bash scripts/vlm_llm_ucf_eval.sh ${REPLICA_INDEX} 8 'lmms-lab/llava-onevision-qwen2-7b-ov'
      - bash
      - -c
      - |
        while true; do
          rank=$(curl -s http://rankserver:5000)
          if [ -z "$$rank" ]; then
            echo "Rank server is not ready yet"
            sleep 1
            continue
          else
            echo "Got rank: $$rank"
            break
          fi
        done
    deploy:
      replicas: 8
      # resources:
      #   reservations:
      #     devices:
      #       - driver: nvidia
      #         count: 1
      #         capabilities: [gpu]
      #         device_ids: ['${REPLICA_INDEX}']

# for i in {0..7}; do
#     REPLICA_INDEX=$i docker-compose -f docker/docker-compose-multirun-single.yaml up -d
# done
# sudo로 docker-compose 깔아야 쓸 수 있음
